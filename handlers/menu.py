# from aiogram import Router, F
# from aiogram.filters import Command
# from aiogram.types import CallbackQuery, Message

# from keyboards.main_menu import main_menu
# from filters.role import AdminFilter, RepFilter

# router = Router()

# @router.message(Command("menu"))
# async def show_menu(message: Message, current_user):
#     await message.answer(
#         "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
#         reply_markup=main_menu(is_admin=current_user.role == current_user.role.ADMIN),
#     )

# @router.callback_query(F.data == "help")
# async def help_cb(call: CallbackQuery):
#     await call.answer("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.")

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from keyboards.main_menu import main_menu
from filters.role import AdminFilter, RepFilter

router = Router()

# /menu –∏–ª–∏ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç ‚Üí –≤—ã–≤–æ–¥–∏–º –º–µ–Ω—é
@router.message()
async def show_menu(msg: Message):
    # –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Ä–µ–ø–∞; –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä —Ä–æ–ª–∏, –ø–µ—Ä–µ–¥–∞–π—Ç–µ —Ñ–ª–∞–≥
    await msg.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu(is_admin=False))

# ---------- callback-—Ö—ç–Ω–¥–ª–µ—Ä—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è ----------
@router.callback_query(RepFilter(), F.data == "visits_today")
async def visits_today(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("üìÖ –í–∏–∑–∏—Ç—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: –ø–æ–∫–∞ –ø—É—Å—Ç–æ")

@router.callback_query(RepFilter(), F.data == "plan_visit")
async def plan_visit(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("üõçÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∏–∑–∏—Ç–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

@router.callback_query(RepFilter(), F.data == "start_report")
async def start_report(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("üìç –û—Ç—á—ë—Ç –æ –≤–∏–∑–∏—Ç–µ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

@router.callback_query(RepFilter(), F.data == "stats")
async def stats(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

@router.callback_query(RepFilter(), F.data == "help")
async def help_rep(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("‚ùì –ü–æ–º–æ—â—å: –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# ---------- callback-—Ö—ç–Ω–¥–ª–µ—Ä—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ----------
@router.callback_query(AdminFilter(), F.data == "admin_reps")
async def admin_reps(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("üë§ –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

@router.callback_query(AdminFilter(), F.data == "admin_reports")
async def admin_reports(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("üßæ –í—Å–µ –æ—Ç—á—ë—Ç—ã (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

@router.callback_query(AdminFilter(), F.data == "admin_alerts")
async def admin_alerts(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("‚ö†Ô∏è –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–∏–∑–∏—Ç—ã (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

@router.callback_query(AdminFilter(), F.data == "admin_analytics")
async def admin_analytics(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

@router.callback_query(AdminFilter(), F.data == "admin_export")
async def admin_export(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer("üì§ –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á—ë—Ç–æ–≤ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
